from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram import F, methods
from aiogram.types import Message, InlineKeyboardMarkup
from aiogram import html
from config import places

callbacks = [
    "schedule",
    "routes",
    "weather",
    "resources",
    "book_search",
    "answers",
    "memes",
    "about_teachers",
    "connect",
    "faq",
    "options",
    "schedule:teacher",
    "schedule:group",
    "schedule:back",
    "routes:global",
    "routes:local",
    "routes_global:back",
    "routes_global_selected:back"
]

menus = [
    "shedule",
    "routes",
    "weather",
    "resources",
    "book_search",
    "answers",
    "memes",
    "about_teachers",
    "connect",
    "faq",
    "options",
    "main",
    "start",
    "routes_global",
    "routes_global_selected"
]


def KeyboardCreate(menu_name):
    builder = InlineKeyboardBuilder()
    if menu_name == menus[11]:
        builder.button(text="–†–∞—Å–ø–∏—Å–∞–Ω–∏–µüìÜ", callback_data=callbacks[0])
        builder.button(text="–ú–∞—Ä—à—Ä—É—Ç—ãüó∫Ô∏è", callback_data=callbacks[1])
        builder.button(text="–ü–æ–≥–æ–¥–∞üå¶Ô∏è", callback_data=callbacks[2])

        builder.button(text="–ü–æ–ª–µ–∑–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ãüìö", callback_data=callbacks[3])
        builder.button(text="–ü–æ–∏—Å–∫ –∫–Ω–∏–≥üìô", callback_data=callbacks[4])
        builder.button(text="–û—Ç–≤–µ—Ç—ã‚ÅâÔ∏è", callback_data=callbacks[5])

        builder.button(text="–ú–µ–º—ã –∏ –∫–∞—Ä—Ç–∏–Ω–∫–∏üòÇ", callback_data=callbacks[6])

        builder.button(text="–û –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µüßë‚Äçüè´", callback_data=callbacks[7])

        builder.button(text="–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—åüì±", callback_data=callbacks[8])
        builder.button(text="–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å‚ùì", callback_data=callbacks[9])

        builder.button(text="–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–∞—Å—Å—ã–ª–∫–∏‚è±Ô∏è", callback_data=callbacks[10])

        builder.adjust(3, 3, 1, 1, 2, 1)

    elif menu_name == menus[0]:
        builder.button(text="–ü–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—é", callback_data=callbacks[11])
        builder.button(text="–ü–æ –≥—Ä—É–ø–ø–µ", callback_data=callbacks[12])
        builder.button(text="<< –ù–∞–∑–∞–¥", callback_data=callbacks[13])
        builder.adjust(2, 1)
    elif menu_name == menus[12]:
        builder.button(text="–ù–∞—á–∞—Ç—å!", callback_data=callbacks[13])
    elif menu_name == menus[13]:
        a = 0
        for i in places:
            # builder.button(text=places[i], callback_data=f"routes:global:{list(places.keys())[a]}")
            builder.button(text=places[i], callback_data=f"{list(places.keys())[a]}")
            a += 1
        builder.button(text="<< –ù–∞–∑–∞–¥", callback_data=callbacks[15])
        builder.adjust(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1)
    elif menu_name == menus[1]:
        builder.button(text="–ö–æ—Ä–ø—É—Å–∞", callback_data=callbacks[14])
        builder.button(text="–ö–∞–±–∏–Ω–µ—Ç—ã", callback_data=callbacks[15])
        builder.button(text="<< –ù–∞–∑–∞–¥", callback_data=callbacks[13])
        builder.adjust(2, 1)
    elif menu_name == menus[14]:
        builder.button(text="<< –ù–∞–∑–∞–¥", callback_data=callbacks[17])
    else:
        builder.button(text="<< –ù–∞–∑–∞–¥", callback_data=callbacks[13])
    return builder.as_markup()